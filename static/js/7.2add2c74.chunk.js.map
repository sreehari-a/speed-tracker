{"version":3,"file":"static/js/7.2add2c74.chunk.js","mappings":"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","sources":["components/loader/index.tsx","components/loader/styles.ts","components/Table/index.tsx","components/Table/styles.ts","HomePage/index.tsx","HomePage/styles.ts"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { useInjectReducer } from \"../../utils/injectReducer\";\r\nimport stylize from \"../../utils/stylize\";\r\nimport { selectLoading } from \"./selectors\";\r\nimport styles from \"./styles\";\r\nimport reducer from \"./reducer\";\r\n\r\ntype Props = {\r\n  classes: any;\r\n  loaderText?: string;\r\n  loading: boolean;\r\n};\r\nconst key = \"loader\";\r\nfunction Loader({ classes, loaderText, loading }: Props) {\r\n  useInjectReducer({ key, reducer });\r\n  return (\r\n    <>\r\n      {loading &&loaderText && <div className={classes.loaderText}>{loaderText}</div>}\r\n      <div className={classes.container}>\r\n        {loading && (\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <div>\r\n                      <div>\r\n                        <div>\r\n                          <div></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  loading: selectLoading(),\r\n});\r\n\r\nconst withConnect = connect(mapStateToProps);\r\nexport default stylize(compose(withConnect, memo)(Loader), styles);\r\n// export default stylize(Loader, styles);\r\n","export default function styles() {\r\n  return {\r\n    container: {\r\n      \"& div\": {\r\n        /* Finally, a use for \"groove\"! */\r\n        border: \"18px groove rebeccapurple\",\r\n\r\n        display: \"table-cell\",\r\n        borderRadius: \"999px\",\r\n        animation: \"$spin 15s linear infinite\",\r\n      },\r\n      display: 'flex',\r\n      justifyContent: 'center'\r\n    },\r\n    \"@keyframes spin\": {\r\n      '0%': { transform: \"rotate(0deg)\" },\r\n      '100%': { transform: \"rotate(360deg)\" },\r\n    },\r\n    loaderText: {\r\n      textAlign: 'center'\r\n    }\r\n  };\r\n}\r\n","import { Button } from \"antd\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport stylize from \"../../utils/stylize\";\r\nimport styles from \"./styles\";\r\n\r\ntype Props = {\r\n  classes: any;\r\n  data: {\r\n    headers: any[];\r\n    rowData: any[];\r\n  };\r\n};\r\n\r\nfunction Table(props: Props) {\r\n  const { data: { headers, rowData } = {}, classes } = props;\r\n  return (\r\n    <div className={classes.container}>\r\n      <table>\r\n        <tr>\r\n          {headers?.map(({ label }: any) => {\r\n            return <th>{label}</th>;\r\n          })}\r\n        </tr>\r\n        {rowData?.map((data: any) => {\r\n          return (\r\n            <tr>\r\n              {headers?.map(({ key }: any) => {\r\n                return <td>{data[key]}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </table>\r\n      <div className={classes.formItem}>\r\n        {\r\n          <CSVLink\r\n            //@ts-ignore\r\n            data={rowData}\r\n            filename={`performance-data`}\r\n            headers={headers}\r\n          >\r\n            <Button>Download Excel</Button>\r\n          </CSVLink>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default stylize(Table, styles);\r\n","\nexport default function styles(colors: any) {\n  return {\n\n    container: {\n      \"& table\": {\n        fontFamily: \"arial, sans-serif\",\n        borderCollapse: \"collapse\",\n        width: \"90%\",\n        margin: 'auto',\n      },\n      \"& td,th\": {\n        border: `1px solid ${colors.primary}`,\n        textAlign: \"left\",\n        padding: \"8px\",\n      },\n    },\n    formItem: {\n      margin: \"0.625rem\",\n      display: 'flex',\n      justifyContent: 'center'\n    },\n  };\n}\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n */\n\nimport { Button, Input, InputNumber } from \"antd\";\nimport React, { useState } from \"react\";\nimport stylize from \"../utils/stylize\";\nimport styles from \"./styles\";\nimport Loader from \"../components/loader\";\nimport Table from \"../components/Table\";\n\ntype Props = {\n  classes: any;\n  performance: any;\n  getPerformance: Function;\n  loading: boolean;\n  resetTable: Function;\n};\ntype Form = {\n  url?: string;\n  iterationCount?: number;\n}\nexport function HomePage({\n  classes,\n  performance,\n  getPerformance,\n  loading,\n  resetTable,\n}: Props) {\n  const [form, setForm] = useState<Form>({});\n  const { rowData } = performance || {};\n  const updateForm = (event: any) => {\n    const { target: { id = \"\", value = \"\" } = {} } = event;\n    const updatedForm = { ...form, [id]: value };\n    id && setForm(updatedForm);\n  };\n  const updateIterationCount = (value: any) => {\n    updateForm({ target: { id: \"iterationCount\", value } });\n  };\n  const readPerformanceData = () => {\n    resetTable?.();\n    const urls = form.url?.split(\",\");\n    urls?.forEach((url) => {\n      getPerformance({\n        url,\n        iterationCount: form.iterationCount || 5,\n      });\n    });\n  };\n  return (\n    <div className={classes.formWrapper}>\n      <div className={`${classes.aboutText} caligraphy`}>\n            Runs performance audits and analyses the result\n          </div>\n      {!loading && (\n        <>\n          <div className={classes.formItem}>\n            <div className={classes.label}>{'URL(s)'}</div>\n            <Input\n              id=\"url\"\n              placeholder=\"Enter url or multiple urls separated by comma\"\n              value={form.url}\n              onChange={updateForm}\n            />\n          </div>\n          <div className={classes.formItem}>\n            <div className={classes.label}>{'No. of samples to be taken'}</div>\n            <InputNumber\n              id=\"iterationCount\"\n              placeholder=\"Enter no. of samples of each url to be analyzed defaults to 5 to a max of 10\"\n              value={form.iterationCount}\n              onChange={updateIterationCount}\n              min={1}\n              max={10}\n            />\n          </div>\n          <div className={classes.formItem}>\n            <Button onClick={readPerformanceData}>Get Performance Data</Button>\n          </div>\n        </>\n      )}\n      {rowData.length && !loading && (\n        //@ts-ignore\n        <Table data={performance} />\n      )}\n      {\n        //@ts-ignore\n        <Loader loaderText={\"Please wait while we analyze your page......\"} />\n      }\n    </div>\n  );\n}\n\nexport default stylize(HomePage, styles);\n","export default function styles(colors: any) {\n  return {\n    container: {\n      width: \"100%\",\n      color: colors.textColor,\n    },\n\n    formWrapper: {\n      width: \"100%\",\n      \"& .ant-input,.ant-input-number\": {\n        width: \"35rem\",\n        lineHeight: \"2rem\",\n        borderRadius: \"3px\",\n        \"&:hover,:focus\": {\n          borderColor: colors.primaryDark,\n        },\n        \"&::placeholder\": {\n          color: \"#7c2424\",\n        },\n        background: 'transparent',\n        border: `1px solid ${colors.primary}`,\n      },\n      '& .ant-input-number-input::placeholder': {\n        color: \"#7c2424\",\n      },\n      \"& .ant-collapse-header.ant-collapse-header\": {\n        alignItems: \"center\",\n        \"& .ant-input\": {\n          width: \"auto\",\n        },\n      },\n      '& .ant-btn': {\n        background: colors.primary,\n        color: '#fff',\n        \"&:hover\": {\n          background: colors.primaryDark,\n        },\n      },\n    },\n    formItem: {\n      margin: \"0.625rem\",\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n\n    },\n    aboutText: {\n      color: colors.primary,\n      textAlign: 'center',\n      fontSize: '20px'\n    },\n    label: {\n      width: '35rem',\n    }\n  };\n}\n"],"names":["mapStateToProps","createStructuredSelector","loading","selectLoading","withConnect","connect","stylize","compose","memo","classes","loaderText","useInjectReducer","key","reducer","className","container","border","display","borderRadius","animation","justifyContent","transform","textAlign","props","data","headers","rowData","map","label","formItem","CSVLink","filename","colors","fontFamily","borderCollapse","width","margin","primary","padding","HomePage","performance","getPerformance","resetTable","useState","form","setForm","updateForm","event","target","id","value","updatedForm","formWrapper","aboutText","placeholder","url","onChange","iterationCount","min","max","onClick","urls","split","forEach","length","color","textColor","lineHeight","borderColor","primaryDark","background","alignItems","flexDirection","fontSize"],"sourceRoot":""}