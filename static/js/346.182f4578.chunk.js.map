{"version":3,"file":"static/js/346.182f4578.chunk.js","mappings":"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","sources":["components/loader/index.tsx","components/loader/styles.ts","HomePage/index.js","HomePage/styles.ts"],"sourcesContent":["import React, { memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { useInjectReducer } from \"../../utils/injectReducer\";\r\nimport stylize from \"../../utils/stylize\";\r\nimport { selectLoading } from \"./selectors\";\r\nimport styles from \"./styles\";\r\nimport reducer from \"./reducer\";\r\n\r\ntype Props = {\r\n  classes: any;\r\n  loaderText?: string;\r\n  loading: boolean;\r\n};\r\nconst key = \"loader\";\r\nfunction Loader({ classes, loaderText, loading }: Props) {\r\n  useInjectReducer({ key, reducer });\r\n  return (\r\n    <>\r\n      {loading &&loaderText && <div className={classes.loaderText}>{loaderText}</div>}\r\n      <div className={classes.container}>\r\n        {loading && (\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <div>\r\n                      <div>\r\n                        <div>\r\n                          <div></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  loading: selectLoading(),\r\n});\r\n\r\nconst withConnect = connect(mapStateToProps);\r\nexport default stylize(compose(withConnect, memo)(Loader), styles);\r\n// export default stylize(Loader, styles);\r\n","export default function styles() {\r\n  return {\r\n    container: {\r\n      \"& div\": {\r\n        /* Finally, a use for \"groove\"! */\r\n        border: \"12px groove rebeccapurple\",\r\n\r\n        display: \"table-cell\",\r\n        borderRadius: \"999px\",\r\n        animation: \"$spin 15s linear infinite\",\r\n      },\r\n      display: 'flex',\r\n      justifyContent: 'center'\r\n    },\r\n    \"@keyframes spin\": {\r\n      '0%': { transform: \"rotate(0deg)\" },\r\n      '100%': { transform: \"rotate(360deg)\" },\r\n    },\r\n    loaderText: {\r\n      textAlign: 'center'\r\n    }\r\n  };\r\n}\r\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n */\n\nimport { Button, Input, InputNumber } from \"antd\";\nimport React, { useState } from \"react\";\nimport stylize from \"../utils/stylize\";\nimport styles from \"./styles\";\nimport { CSVLink } from \"react-csv\";\nimport Loader from \"../components/loader\";\n\nexport function HomePage({ classes, performance, getPerformance, loading, resetTable }) {\n  const [form, setForm] = useState({});\n  const { rowData, headers } = performance || {};\n  const updateForm = (event) => {\n    const { target: { id = \"\", value = \"\" } = {} } = event;\n    const updatedForm = { ...form, [id]: value };\n    id && setForm(updatedForm);\n  };\n  const updateIterationCount = value => {\n    updateForm({target :{id: 'iterationCount', value}});\n  }\n  const readPerformanceData = () => {\n    resetTable?.();\n    const urls = form.url.split(',');\n    urls.forEach(url => {\n      getPerformance({\n        API_KEY: form.API_KEY,\n        url,\n        iterationCount: form.iterationCount || 5,\n      })\n    })\n  };\n  return (\n    <div className={classes.formWrapper}>\n      {!loading && (\n        <>\n          <div className={classes.formItem}>\n            <Input\n              id=\"API_KEY\"\n              placeholder=\"Enter Google API Key\"\n              value={form.API_KEY}\n              onChange={updateForm}\n            />\n          </div>\n          <div className={classes.formItem}>\n            <Input\n              id=\"url\"\n              placeholder=\"Enter url or multiple urls separated by comma\"\n              value={form.url}\n              onChange={updateForm}\n            />\n          </div>\n          <div className={classes.formItem}>\n            <InputNumber\n              id=\"iterationCount\"\n              placeholder=\"Enter no. of samples of each url to be analyzed defaults to 5 to a max of 10\"\n              value={form.iterationCount}\n              onChange={updateIterationCount}\n              min={1}\n              max={10}\n            />\n          </div>\n          <div className={classes.formItem}>\n            <Button onClick={readPerformanceData}>Get Performance Data</Button>\n          </div>\n        </>\n      )}\n      {rowData.length && !loading && (\n        <>\n          <table>\n            <tr>\n              {headers.map(({ label }) => {\n                return <th>{label}</th>;\n              })}\n            </tr>\n            {rowData.map((data) => {\n              return (\n                <tr>\n                  {headers.map(({ key }) => {\n                    return <td>{data[key]}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </table>\n          <div className={classes.formItem}>\n            <CSVLink\n              data={rowData}\n              filename={`performance-data`}\n              headers={headers}\n              onClick={() => {\n                console.log(\"clicked\");\n              }}\n            >\n              <Button>Download Excel</Button>\n            </CSVLink>\n          </div>\n        </>\n      )}\n       <Loader loaderText={'Please wait while we analyze your page......'} />\n    </div>\n  );\n}\n\nexport default stylize(HomePage, styles);\n","export default function styles() {\n  return {\n    container: {\n      width: \"100%\",\n      color: \"#000\",\n    },\n\n    formWrapper: {\n      width: \"100%\",\n      \"& .ant-input,.ant-input-number\": {\n        width: \"35rem\",\n        lineHeight: \"2rem\",\n        borderRadius: \"3px\",\n        \"&:hover\": {\n          borderColor: \"#40a9ff\",\n        },\n        \"&::placeholder\": {\n          color: \"#848484\",\n        },\n      },\n      \"& .ant-collapse-header.ant-collapse-header\": {\n        alignItems: \"center\",\n        \"& .ant-input\": {\n          width: \"auto\",\n        },\n      },\n      \"& table\": {\n        fontFamily: \"arial, sans-serif\",\n        borderCollapse: \"collapse\",\n        width: \"90%\",\n        margin: 'auto',\n      },\n      \"& td,th\": {\n        border: \"1px solid #dddddd\",\n        textAlign: \"left\",\n        padding: \"8px\",\n      },\n    },\n    formItem: {\n      margin: \"0.625rem\",\n      display: 'flex',\n      justifyContent: 'center'\n    },\n  };\n}\n"],"names":["mapStateToProps","createStructuredSelector","loading","selectLoading","withConnect","connect","stylize","compose","memo","classes","loaderText","useInjectReducer","key","reducer","className","container","border","display","borderRadius","animation","justifyContent","transform","textAlign","HomePage","performance","getPerformance","resetTable","useState","form","setForm","rowData","headers","updateForm","event","target","id","value","updatedForm","formWrapper","formItem","placeholder","API_KEY","onChange","url","iterationCount","min","max","onClick","split","forEach","length","map","label","data","CSVLink","filename","console","log","width","color","lineHeight","borderColor","alignItems","fontFamily","borderCollapse","margin","padding"],"sourceRoot":""}